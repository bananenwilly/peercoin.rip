{"version":3,"sources":["components/TimeLine.js","App.js","reportWebVitals.js","index.js"],"names":["buildTimeLineElement","author","source","text","price","date","className","contentStyle","background","color","contentArrowStyle","borderRight","iconStyle","TimeLine","App","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAOMA,G,MAAuB,SAACC,EAAQC,EAAQC,EAAMC,EAAOC,GACzD,OACE,eAAC,0BAAD,CACEC,UAAU,kCACVC,aAAc,CAAEC,WAAY,QAASC,MAAO,QAC5CC,kBAAmB,CAAEC,YAAa,oBAClCN,KAAMA,EACNO,UAAW,CAAEJ,WAAY,QAASC,MAAO,QAL3C,UAOE,sBAAKH,UAAU,MAAf,UACE,qBAAKA,UAAU,MAAf,mBACA,qBAAKA,UAAU,MAAf,0BACA,qBAAKA,UAAU,MAAf,SACE,mDAGJ,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sDAGJ,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,MAAf,4BAMO,SAASO,IACtB,OACE,eAAC,mBAAD,WACGb,EAAqB,EAAQ,EAAQ,EAAQ,EAAQ,QACrDA,EAAqB,EAAQ,EAAQ,EAAQ,EAAQ,QACrDA,EAAqB,EAAQ,EAAQ,EAAQ,EAAQ,QAAS,IAC9DA,EAAqB,EAAQ,EAAQ,EAAQ,EAAQ,QAAS,IAC9DA,EAAqB,EAAQ,EAAQ,EAAQ,EAAQ,QAAS,IAC9DA,EAAqB,EAAQ,EAAQ,EAAQ,EAAQ,WCwB7Cc,MA/Df,WACE,OACE,sBAAKR,UAAU,kBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,sBAAKA,UAAU,qFAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,qBAAKA,UAAU,4CAAf,SACE,qBACEA,UAAU,qBACVS,IAAI,0BACJC,IAAI,sBAIV,qBAAKV,UAAU,kCAAf,SACE,+BACE,qBACEA,UAAU,gBACVS,IAAI,2BACJC,IAAI,qBAKZ,uBACA,qBAAKV,UAAU,WAAf,SACE,qBAAKA,UAAU,MAAf,SACE,6BACE,yDAIN,qBAAKA,UAAU,MAAf,SACE,2CAEF,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,MAAf,SACE,+BACE,kDAA8B,WAIpC,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,MAAf,SACE,2DAKR,qBAAKA,UAAU,MAAf,yCACA,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,oCAAf,SACE,cAACO,EAAD,QAGJ,qBAAKP,UAAU,gDAAf,yBChDSW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cad27eaf.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  VerticalTimeline,\n  VerticalTimelineElement,\n} from \"react-vertical-timeline-component\";\nimport \"react-vertical-timeline-component/style.min.css\";\n\nconst buildTimeLineElement = (author, source, text, price, date) => {\n  return (\n    <VerticalTimelineElement\n      className=\"vertical-timeline-element--work\"\n      contentStyle={{ background: \"black\", color: \"#fff\" }}\n      contentArrowStyle={{ borderRight: \"7px solid  black\" }}\n      date={date}\n      iconStyle={{ background: \"black\", color: \"#fff\" }}\n    >\n      <div className=\"row\">\n        <div className=\"col\">$0.44</div>\n        <div className=\"col\">30. Jan 2020</div>\n        <div className=\"col\">\n          <strong>daWilley</strong>\n        </div>\n      </div>\n      <div className=\"row mt-3\">\n        <div className=\"col\">\n          <i>\"peercoin is ded\"</i>\n        </div>\n      </div>\n      <div className=\"row mt-2\">\n        <div className=\"col\">Source </div>\n      </div>\n    </VerticalTimelineElement>\n  );\n};\n\nexport default function TimeLine() {\n  return (\n    <VerticalTimeline>\n      {buildTimeLineElement(\"test\", \"test\", \"test\", \"test\", \"test\")}\n      {buildTimeLineElement(\"test\", \"test\", \"test\", \"test\", \"test\")}\n      {buildTimeLineElement(\"test\", \"test\", \"test\", \"test\", \"test\")}{\" \"}\n      {buildTimeLineElement(\"test\", \"test\", \"test\", \"test\", \"test\")}{\" \"}\n      {buildTimeLineElement(\"test\", \"test\", \"test\", \"test\", \"test\")}{\" \"}\n      {buildTimeLineElement(\"test\", \"test\", \"test\", \"test\", \"test\")}\n    </VerticalTimeline>\n  );\n}\n","import \"./scss/App.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport TimeLine from \"./components/TimeLine\";\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row ppc-hero\">\n        <div className=\"col-12 d-flex flex-column ppc-background justify-content-center align-items-center\">\n          <div className=\"container-fluid\">\n            <div className=\"row justify-content-center \">\n              <div className=\"col-9 col-sm-6 col-md-5 col-lg-4 col-xl-3\">\n                <img\n                  className=\"img-fluid ppc-logo\"\n                  src=\"assets/img/peercoin.svg\"\n                  alt=\"peercoin logo\"\n                />\n              </div>\n            </div>\n            <div className=\"row justify-content-center mt-5\">\n              <span>\n                <img\n                  className=\"ppc-tombstone\"\n                  src=\"assets/img/tombstone.png\"\n                  alt=\"tombstone\"\n                ></img>\n              </span>\n            </div>\n          </div>\n          <hr />\n          <div className=\"row mt-4\">\n            <div className=\"col\">\n              <h3>\n                <strong>Declared dead</strong>\n              </h3>\n            </div>\n          </div>\n          <div className=\"row\">\n            <h2>5 times</h2>\n          </div>\n          <div className=\"row mt-5\">\n            <div className=\"col\">\n              <h3>\n                <strong>Undead since</strong>{\" \"}\n              </h3>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">\n              <h2>7th of July 2012</h2>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">how to contribute goes here</div>\n      <div className=\"row\">\n        <div className=\"col d-flex justify-content-center\">\n          <TimeLine />\n        </div>\n      </div>\n      <div className=\"row ppc-background justify-content-center p-2\">\n        The End\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n//TODO: Scroll down hint icon\n//TODO: Logo credit\n//TODO: donations\n//TODO: contribute\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}